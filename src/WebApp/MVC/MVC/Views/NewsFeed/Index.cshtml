@model Application.DTOs.Pagination.PagedList<Application.DTOs.Post.PostDTO>

@{
    ViewData["Title"] = "Newsfeed";
} 
<div id="postsContainer">
    @foreach(var post in Model.Items)
    {
        await Html.RenderPartialAsync("_Post", post);
    }
</div>

<div id="loadingSpinner" class="text-center">
    <div class="spinner-border" style="width: 4rem; height: 4rem;" role="status">
        <span class="sr-only"></span>
    </div>
</div>
<script>
    let pageNumber = 2;
    let isLoading = false;

    window.addEventListener("scroll", async () => {
        if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 500 && !isLoading) {
            isLoading = true;

            document.getElementById("loadingSpinner").style.display = "block";

            try {
                const response = await fetch(`/Newsfeed/LoadPosts?offset=${pageNumber}`);
                const newPostsHtml = await response.text();

                // Append the new posts to the container
                document.getElementById("postsContainer").insertAdjacentHTML("beforeend", newPostsHtml);
                offset += 1; // update offset for next batch
            } catch (error) {
                console.error("Failed to load posts", error);
            } finally {
                document.getElementById("loadingSpinner").style.display = "none";
                isLoading = false;
            }
        }
    });
</script>
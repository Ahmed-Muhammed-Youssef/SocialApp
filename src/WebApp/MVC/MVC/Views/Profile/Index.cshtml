@model Application.DTOs.User.UserProfileDTO
@{
    ViewData["Title"] = Model.FirstName;
}

<style>
      .status-badge {
        font-size: 0.85rem;
        padding: 0.35rem 0.75rem;
        border-radius: 2rem;
    }
</style>

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card p-4 mb-5" style="background-color: var(--lighter-primary-color);">
                <div class="text-center mb-4">
                    <div class="position-relative d-inline-block mb-3">
                        <img src="@(string.IsNullOrEmpty(Model.ProfilePictureUrl) ? "/images/default-profile.jpg": Model.ProfilePictureUrl)"
                             class="rounded-circle"
                             style="width: 150px; height: 150px; object-fit: cover;"
                             alt="Profile Picture"
                             onerror="this.onerror=null; this.src='/images/default-profile.jpg';">
                    </div>
                    <h2 class="display-6 fw-bold mb-2">@Model.FirstName @Model.LastName</h2>
                    <div id="sendBtnContainer" class="mb-3">
                        @if(Model.Relation == Domain.Constants.SocialRelation.NotFriend)
                        {
                            <button class="btn btn-primary" onclick="addFriend()">Add Friend</button>
                        }
                        else if (Model.Relation == Domain.Constants.SocialRelation.Friend)
                        {
                            <button class="btn btn-primary" onclick="removeFriend()">Remove Friend</button>
                        }
                        else if (Model.Relation == Domain.Constants.SocialRelation.FrinedRequesSent)
                        {
                            <button class="btn btn-primary" onclick="unsendFriendRequest()">Unsend Friend Request</button>
                        }
                        else if (Model.Relation == Domain.Constants.SocialRelation.FriendRequestReceived)
                        {
                            <button class="btn btn-primary" onclick="acceptFriendRequest()">Accept Friend Request</button>
                        }
                    </div>

                    <div class="d-flex justify-content-center gap-2 mb-3">
                        <span class="status-badge bg-light text-dark">
                            <i class="bi @(Model.Sex == 'm' ? "bi-gender-male" : "bi-gender-female") me-1"></i>
                            @(Model.Sex == 'm' ? "Male" : "Female")
                        </span>
                        <span class="status-badge bg-light text-dark">
                            <i class="bi bi-calendar3 me-1"></i>
                            Age: @Model.Age
                        </span>
                    </div>
                    <div class="text-muted small">
                        <span class="me-3">
                            <i class="bi bi-clock-history me-1"></i>
                            Joined @Model.Created.ToString("MMMM yyyy")
                        </span>
                        <span>
                            <i class="bi bi-activity me-1"></i>
                            Active @Model.LastActive.ToRelativeTimeString()
                        </span>
                    </div>
                </div>

                @if (!string.IsNullOrEmpty(Model.Bio))
                {
                    <div class="mt-4 px-lg-4">
                        <h6 class="text-uppercase text-muted small fw-bold mb-3">
                            <i class="bi bi-person-lines-fill me-2"></i>About
                        </h6>
                        <p class="text-muted mb-0">@Model.Bio</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script>
     async function acceptFriendRequest() {
        try {
            const response = await fetch(`/Profile/SendFriendRequest/${@Model.Id}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (response.ok) {
                document.getElementById("sendBtnContainer").innerHTML = '<button class="btn btn-primary" onclick="unsendFriendRequest()">Unsend Friend Request</button>';
                ToastService.showToast("Friend request accepted successfully.", "success");

            } else {
                ToastService.showToast("Failed to accepted friend request.", "error");
            }
        } catch (error) {
            console.error("An error occurred:", error);
        }
    }

    async function addFriend() {
        try {
            const response = await fetch(`/Profile/SendFriendRequest/${@Model.Id}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (response.ok) {
                document.getElementById("sendBtnContainer").innerHTML = '<button class="btn btn-primary" onclick="unsendFriendRequest()">Unsend Friend Request</button>';
                ToastService.showToast("Friend request sent successfully.", "success");

            } else {
                ToastService.showToast("Failed to send friend request.", "error");
            }
        } catch (error) {
            console.error("An error occurred:", error);
        }
    }

    async function unsendFriendRequest() {
        try {
            const response = await fetch(`/Profile/UnsendFriendRequest/${@Model.Id}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (response.ok) {
                document.getElementById("sendBtnContainer").innerHTML = '<button class="btn btn-primary" onclick="addFriend()">Add Friend</button>';
                ToastService.showToast("Friend request unsent successfully.", "success");
            } else {
                ToastService.showToast("Failed to unsend friend request.", "error");
            }
        } catch (error) {
            console.error("An error occurred:", error);
        }
    }
</script>